name: üöÄ Deploy vk-forwarder

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag to deploy (defaults to latest)"
        required: false
        default: "latest"

jobs:
  deploy:
    name: üîÑ Deploy via Helm
    runs-on: self-hosted

    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    steps:
      - name: üßæ Checkout repo
        uses: actions/checkout@v4

      - name: üîß Ensure namespace
        run: |
          kubectl get ns app || kubectl create ns app

      - name: üîê Apply/update env Secret
        env:
          ADDR: ":8080"
          BOOTSTRAP: ${{ secrets.VK_FORWARDER_KAFKA_BOOTSTRAP_SERVERS_VALUE }}
          TOPIC: ${{ secrets.VK_FORWARDER_KAFKA_VK_MESS_TOPIC_NAME }}
          SASL_USER: ${{ secrets.VK_FORWARDER_KAFKA_SASL_USERNAME }}
          SASL_PASS: ${{ secrets.VK_FORWARDER_KAFKA_SASL_PASSWORD }}
          CONFIRMATION: ${{ secrets.VK_FORWARDER_VK_CONFIRMATION }}
          SECRET: ${{ secrets.VK_FORWARDER_VK_SECRET }}
          WEBHOOK_PATH: ${{ secrets.VK_FORWARDER_API_VK_WEB_HOOK_PATH }}
          HEALTH_PATH: ${{ secrets.VK_FORWARDER_API_HEALTH_CHECK_PATH }}
        run: |
          kubectl -n app create secret generic vk-forwarder-env \
            --from-literal=VK_FORWARDER_SERVER_ADDR="${ADDR:-:8080}" \
            --from-literal=VK_FORWARDER_KAFKA_BOOTSTRAP_SERVERS_VALUE="${BOOTSTRAP}" \
            --from-literal=VK_FORWARDER_KAFKA_VK_MESS_TOPIC_NAME="${TOPIC}" \
            --from-literal=VK_FORWARDER_KAFKA_SASL_USERNAME="${SASL_USER}" \
            --from-literal=VK_FORWARDER_KAFKA_SASL_PASSWORD="${SASL_PASS}" \
            --from-literal=VK_FORWARDER_VK_CONFIRMATION="${CONFIRMATION}" \
            --from-literal=VK_FORWARDER_VK_SECRET="${SECRET}" \
            --from-literal=VK_FORWARDER_API_VK_WEB_HOOK_PATH="${WEBHOOK_PATH:-/webhook}" \
            --from-literal=VK_FORWARDER_API_HEALTH_CHECK_PATH="${HEALTH_PATH:-/healthz}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: üì§ Apply manifests
        run: |
          kubectl -n app apply -f k8s/vk-forwarder/deploy.yaml

      - name: üñº Update image tag
        env:
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
        run: |
          TAG=${IMAGE_TAG:-latest}
          REPO=ghcr.io/pufferfish-io/vk-forwarder
          IMAGE="${REPO}:${TAG}"
          echo "Deploying image: ${IMAGE}"
          kubectl -n app set image deployment/vk-forwarder vk-forwarder=${IMAGE}

      - name: üîé Rollout status
        run: |
          set -e
          kubectl -n app rollout status deployment/vk-forwarder --timeout=120s
          kubectl -n app get pods -o wide

      - name: üìù Recent logs (best effort)
        continue-on-error: true
        run: |
          kubectl -n app logs deploy/vk-forwarder --tail=200
