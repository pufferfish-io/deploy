name: "üîê Sync Go service secret key"

on:
  workflow_dispatch:
    inputs:
      service:
        description: "–°–µ—Ä–≤–∏—Å (Deployment)"
        required: true
        type: choice
        options:
          - telegram-forwarder
          - telegram-normalizer
          - message-responder
          - message-responder-ocr
          - telegram-response-preparer
          - telegram-sender
          - vk-forwarder
          - doc2text
      secret_key:
        description: "–ò–º—è GitHub secret, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å"
        required: true

jobs:
  sync:
    name: "–û–±–Ω–æ–≤–∏—Ç—å –∫–ª—é—á —Å–µ–∫—Ä–µ—Ç–∞"
    runs-on: self-hosted
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      SERVICE: ${{ github.event.inputs.service }}
      SECRET_KEY: ${{ github.event.inputs.secret_key }}
      SECRET_VALUE: ${{ secrets[github.event.inputs.secret_key] }}
    steps:
      - name: üßæ Checkout repo
        uses: actions/checkout@v4

      - name: üîß Ensure namespace
        run: |
          kubectl get ns app || kubectl create ns app

      - name: ‚ôªÔ∏è Patch secret key
        run: |
          set -euo pipefail

          if [[ -z "${SECRET_KEY}" ]]; then
            echo "Secret key input is empty"
            exit 1
          fi

          if [[ -z "${SECRET_VALUE}" ]]; then
            echo "GitHub secret ${SECRET_KEY} is empty or missing"
            exit 1
          fi

          K8S_SECRET="${SERVICE}-env"

          VALUE_B64=$(printf '%s' "${SECRET_VALUE}" | base64 | tr -d '\n')
          PATCH=$(printf '{"data":{"%s":"%s"}}' "${SECRET_KEY}" "${VALUE_B64}")

          echo "Patching ${K8S_SECRET} with key ${SECRET_KEY}"
          kubectl -n app patch secret "${K8S_SECRET}" --type=merge -p "${PATCH}"
          kubectl -n app get secret "${K8S_SECRET}" -o jsonpath='{.metadata.name}'
          echo ""
          echo "Done. Restart deployment manually –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ."
